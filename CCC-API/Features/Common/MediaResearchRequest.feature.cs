// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.3.2.0
//      SpecFlow Generator Version:2.3.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace CCC_API.Features.Common
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.3.2.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("MediaResearchRequest")]
    public partial class MediaResearchRequestFeature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "MediaResearchRequest.feature"
#line hidden
        
        [NUnit.Framework.OneTimeSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "MediaResearchRequest", "\tTo verify Media Research Request feature, we validate\r\n\tcreating a request for a" +
                    " Media Contact and a Media Outlet", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.OneTimeTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("A User creates a Media Research Request for a Media Contact")]
        [NUnit.Framework.IgnoreAttribute("Ignored scenario")]
        [NUnit.Framework.CategoryAttribute("media")]
        [NUnit.Framework.CategoryAttribute("bugCCC-15825")]
        public virtual void AUserCreatesAMediaResearchRequestForAMediaContact()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("A User creates a Media Research Request for a Media Contact", new string[] {
                        "Influencers",
                        "ignore",
                        "bugCCC-15825"});
#line 6
this.ScenarioSetup(scenarioInfo);
#line 7
 testRunner.Given("I login as \'Manager Standard User\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 8
 testRunner.When("I perform a POST to Media Research Request Endpoint for Contact \'Stephanie Lee Fa" +
                    "tta\' and Change Type \'ContactUpdate\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 9
 testRunner.Then("the Media Research Request Endpoint response code should be \'200\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("A User creates a Media Research Request for a Media Contact using an improper Cha" +
            "nge Type")]
        [NUnit.Framework.CategoryAttribute("media")]
        public virtual void AUserCreatesAMediaResearchRequestForAMediaContactUsingAnImproperChangeType()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("A User creates a Media Research Request for a Media Contact using an improper Cha" +
                    "nge Type", new string[] {
                        "Influencers"});
#line 12
this.ScenarioSetup(scenarioInfo);
#line 13
 testRunner.Given("I login as \'Standard User\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 14
 testRunner.When("I perform a POST to Media Research Request Endpoint for Contact \'Stephanie Lee Fa" +
                    "tta\' and Change Type \'ContactAdditon\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 15
 testRunner.Then("the Media Research Request Endpoint response code should be \'400\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("A User creates a Media Research Request for a Media Outlet")]
        [NUnit.Framework.CategoryAttribute("media")]
        public virtual void AUserCreatesAMediaResearchRequestForAMediaOutlet()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("A User creates a Media Research Request for a Media Outlet", new string[] {
                        "Influencers"});
#line 18
this.ScenarioSetup(scenarioInfo);
#line 19
 testRunner.Given("I login as \'Standard User\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 20
 testRunner.When("I perform a POST to Media Research Request Endpoint for Outlet \'chicago tribune\' " +
                    "and Change Type \'ContactAddition\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 21
 testRunner.Then("the Media Research Request Endpoint response code should be \'200\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("A User creates a Media Research Request for a invalid entity type")]
        [NUnit.Framework.CategoryAttribute("media")]
        public virtual void AUserCreatesAMediaResearchRequestForAInvalidEntityType()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("A User creates a Media Research Request for a invalid entity type", new string[] {
                        "Influencers"});
#line 24
this.ScenarioSetup(scenarioInfo);
#line 25
 testRunner.Given("I login as \'Standard User\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 26
 testRunner.When("I perform a POST to Media Research Request Endpoint for an invalid entity type an" +
                    "d Change Type \'ContactUpdate\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 27
 testRunner.Then("the Media Research Request Endpoint response code should be \'400\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
