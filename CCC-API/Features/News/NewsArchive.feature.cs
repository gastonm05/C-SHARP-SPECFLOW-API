// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.3.2.0
//      SpecFlow Generator Version:2.3.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace CCC_API.Features.News
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.3.2.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("NewsArchiveSearch")]
    public partial class NewsArchiveSearchFeature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "NewsArchive.feature"
#line hidden
        
        [NUnit.Framework.OneTimeSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "NewsArchiveSearch", "\tIn order to retrieve news from Archive\r\n\tAs a C3 user\r\n\tI want to be able to use" +
                    " the API", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.OneTimeTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Automate Add Sources to Archive Search Criteria")]
        [NUnit.Framework.IgnoreAttribute("Ignored scenario")]
        [NUnit.Framework.CategoryAttribute("herdOfGnus")]
        [NUnit.Framework.CategoryAttribute("news")]
        public virtual void AutomateAddSourcesToArchiveSearchCriteria()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Automate Add Sources to Archive Search Criteria", new string[] {
                        "herdOfGnus",
                        "ignore"});
#line 7
this.ScenarioSetup(scenarioInfo);
#line 8
 testRunner.Given("I login as \'news archive manager\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 9
 testRunner.When("I search for news archive by keywords with the value \'marvel\' and by sources with" +
                    " a value of \'1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 10
 testRunner.Then("the News Archive Endpoint has the correct response", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("User can pull in 1000 clips")]
        [NUnit.Framework.IgnoreAttribute("Ignored scenario")]
        [NUnit.Framework.CategoryAttribute("herdOfGnus")]
        [NUnit.Framework.CategoryAttribute("news")]
        public virtual void UserCanPullIn1000Clips()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("User can pull in 1000 clips", new string[] {
                        "herdOfGnus",
                        "ignore"});
#line 13
this.ScenarioSetup(scenarioInfo);
#line 14
 testRunner.Given("I login as \'news archive user\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 15
 testRunner.When("I search for news archive by keywords with a value of \'marvel\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 16
 testRunner.Then("the News Archive Endpoint has the correct response", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 17
 testRunner.And("I should see a value of \'1000\' for AddNewsToLimit", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Remove Connect Website Analytics Button from All News")]
        [NUnit.Framework.IgnoreAttribute("Ignored scenario")]
        [NUnit.Framework.CategoryAttribute("herdOfGnus")]
        [NUnit.Framework.CategoryAttribute("news")]
        public virtual void RemoveConnectWebsiteAnalyticsButtonFromAllNews()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Remove Connect Website Analytics Button from All News", new string[] {
                        "herdOfGnus",
                        "ignore"});
#line 20
this.ScenarioSetup(scenarioInfo);
#line 21
 testRunner.Given("I login as \'news archive manager\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 22
 testRunner.When("I search for news archive by keywords with a value of \'marvel\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 23
 testRunner.Then("the News Archive Endpoint has the correct response", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Validate NLA Sources in Archive News Search")]
        [NUnit.Framework.IgnoreAttribute("Ignored scenario")]
        [NUnit.Framework.CategoryAttribute("herdOfGnus")]
        [NUnit.Framework.CategoryAttribute("news")]
        public virtual void ValidateNLASourcesInArchiveNewsSearch()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Validate NLA Sources in Archive News Search", new string[] {
                        "herdOfGnus",
                        "ignore"});
#line 26
this.ScenarioSetup(scenarioInfo);
#line 27
 testRunner.Given("I login as \'news archive manager\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 28
 testRunner.When("I search for news archive by keywords with the value \'eclipse\' and by source name" +
                    " with a value of \'NLA Web\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 29
 testRunner.Then("the News Archive Endpoint has the correct response", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 30
 testRunner.And("I should see all the archive clips are coming from NLA Web source", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Validate CLA Sources in Archive News Search")]
        [NUnit.Framework.IgnoreAttribute("Ignored scenario")]
        [NUnit.Framework.CategoryAttribute("herdOfGnus")]
        [NUnit.Framework.CategoryAttribute("news")]
        public virtual void ValidateCLASourcesInArchiveNewsSearch()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Validate CLA Sources in Archive News Search", new string[] {
                        "herdOfGnus",
                        "ignore"});
#line 33
this.ScenarioSetup(scenarioInfo);
#line 34
 testRunner.Given("I login as \'news archive manager\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 35
 testRunner.When("I search for news archive by keywords with the value \'eclipse\' and by source name" +
                    " with a value of \'CLA Web\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 36
 testRunner.Then("the News Archive Endpoint has the correct response", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 37
 testRunner.And("I should see all the archive clips are coming from CLA Web source", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Validate News Archive Search with Orion Syntax by Case Sensitive")]
        [NUnit.Framework.IgnoreAttribute("Ignored scenario")]
        [NUnit.Framework.CategoryAttribute("herdOfGnus")]
        [NUnit.Framework.CategoryAttribute("news")]
        public virtual void ValidateNewsArchiveSearchWithOrionSyntaxByCaseSensitive()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Validate News Archive Search with Orion Syntax by Case Sensitive", new string[] {
                        "herdOfGnus",
                        "ignore"});
#line 40
this.ScenarioSetup(scenarioInfo);
#line 41
 testRunner.Given("I login as \'Orion Syntax User\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 42
 testRunner.When("I search for news archive by keywords with a value of \'cs(FOX)\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 43
 testRunner.Then("the News Archive Endpoint has the correct response", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Validate News Archive Search with Orion Syntax by Proximity")]
        [NUnit.Framework.IgnoreAttribute("Ignored scenario")]
        [NUnit.Framework.CategoryAttribute("herdOfGnus")]
        [NUnit.Framework.CategoryAttribute("news")]
        public virtual void ValidateNewsArchiveSearchWithOrionSyntaxByProximity()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Validate News Archive Search with Orion Syntax by Proximity", new string[] {
                        "herdOfGnus",
                        "ignore"});
#line 46
this.ScenarioSetup(scenarioInfo);
#line 47
 testRunner.Given("I login as \'Orion Syntax User\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 48
 testRunner.When("I search for news archive by keywords with a value of \'(samsung) w/9(galaxy)\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 49
 testRunner.Then("the News Archive Endpoint has the correct response", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Validate News Archive Search with Orion Syntax by Truncation")]
        [NUnit.Framework.IgnoreAttribute("Ignored scenario")]
        [NUnit.Framework.CategoryAttribute("herdOfGnus")]
        [NUnit.Framework.CategoryAttribute("news")]
        public virtual void ValidateNewsArchiveSearchWithOrionSyntaxByTruncation()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Validate News Archive Search with Orion Syntax by Truncation", new string[] {
                        "herdOfGnus",
                        "ignore"});
#line 52
this.ScenarioSetup(scenarioInfo);
#line 53
 testRunner.Given("I login as \'Orion Syntax User\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 54
 testRunner.When("I search for news archive by keywords with a value of \'snack*\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 55
 testRunner.Then("the News Archive Endpoint has the correct response", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Validate News Archive Search with Orion Syntax by Minimum Mentions")]
        [NUnit.Framework.IgnoreAttribute("Ignored scenario")]
        [NUnit.Framework.CategoryAttribute("herdOfGnus")]
        [NUnit.Framework.CategoryAttribute("news")]
        public virtual void ValidateNewsArchiveSearchWithOrionSyntaxByMinimumMentions()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Validate News Archive Search with Orion Syntax by Minimum Mentions", new string[] {
                        "herdOfGnus",
                        "ignore"});
#line 58
this.ScenarioSetup(scenarioInfo);
#line 59
 testRunner.Given("I login as \'Orion Syntax User\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 60
 testRunner.When("I search for news archive by keywords with a value of \'atleast2(trump)\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 61
 testRunner.Then("the News Archive Endpoint has the correct response", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Validate Archive News Search Results can be added to My Coverage")]
        [NUnit.Framework.CategoryAttribute("herdOfGnus")]
        [NUnit.Framework.CategoryAttribute("news")]
        public virtual void ValidateArchiveNewsSearchResultsCanBeAddedToMyCoverage()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Validate Archive News Search Results can be added to My Coverage", new string[] {
                        "herdOfGnus"});
#line 64
this.ScenarioSetup(scenarioInfo);
#line 65
 testRunner.Given("I login as \'news archive manager\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 66
 testRunner.When("I search for news archive by keywords with a value of \'marvel\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 67
 testRunner.Then("the News Archive Endpoint has the correct response", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 68
 testRunner.When("I add the first \'100\' results to My Coverage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 69
 testRunner.Then("the News Archive Import Endpoint has the correct response", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Validate News Archive Parameter Max Archive Date Range")]
        [NUnit.Framework.IgnoreAttribute("Ignored scenario")]
        [NUnit.Framework.CategoryAttribute("herdOfGnus")]
        [NUnit.Framework.CategoryAttribute("news")]
        public virtual void ValidateNewsArchiveParameterMaxArchiveDateRange()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Validate News Archive Parameter Max Archive Date Range", new string[] {
                        "herdOfGnus",
                        "ignore"});
#line 72
this.ScenarioSetup(scenarioInfo);
#line 73
 testRunner.Given("I login as \'C3ShakedownAutomation Manager\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 74
 testRunner.When("I perform a GET for archve search preferences", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 75
 testRunner.Then("I should see the value for Archive Search Days Limit", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Validate News Archive Search with Orion Syntax using boolean")]
        [NUnit.Framework.IgnoreAttribute("Ignored scenario")]
        [NUnit.Framework.CategoryAttribute("herdOfGnus")]
        [NUnit.Framework.CategoryAttribute("news")]
        public virtual void ValidateNewsArchiveSearchWithOrionSyntaxUsingBoolean()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Validate News Archive Search with Orion Syntax using boolean", new string[] {
                        "herdOfGnus",
                        "ignore"});
#line 78
this.ScenarioSetup(scenarioInfo);
#line 79
 testRunner.Given("I login as \'Orion Syntax User\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 80
 testRunner.When("I search for news archive by keywords with a value of \'samsung OR galaxy\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 81
 testRunner.Then("the News Archive Endpoint has the correct response", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Validate News Archive Search with Orion Syntax using special characters (#wine)")]
        [NUnit.Framework.IgnoreAttribute("Ignored scenario")]
        [NUnit.Framework.CategoryAttribute("herdOfGnus")]
        [NUnit.Framework.CategoryAttribute("news")]
        public virtual void ValidateNewsArchiveSearchWithOrionSyntaxUsingSpecialCharactersWine()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Validate News Archive Search with Orion Syntax using special characters (#wine)", new string[] {
                        "herdOfGnus",
                        "ignore"});
#line 84
this.ScenarioSetup(scenarioInfo);
#line 85
 testRunner.Given("I login as \'Orion Syntax User\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 86
 testRunner.When("I search for news archive by keywords with a value of \'%23wine\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 87
 testRunner.Then("the News Archive Endpoint has the correct response", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Validate News Archive Search with wrong Orion Syntax returns proper response")]
        [NUnit.Framework.IgnoreAttribute("Ignored scenario")]
        [NUnit.Framework.CategoryAttribute("herdOfGnus")]
        [NUnit.Framework.CategoryAttribute("news")]
        public virtual void ValidateNewsArchiveSearchWithWrongOrionSyntaxReturnsProperResponse()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Validate News Archive Search with wrong Orion Syntax returns proper response", new string[] {
                        "herdOfGnus",
                        "ignore"});
#line 90
this.ScenarioSetup(scenarioInfo);
#line 91
 testRunner.Given("I login as \'Orion Syntax User\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 92
 testRunner.When("I search for news archive by keywords with a value of \'Music%20AND%20(jazz%20OR%2" +
                    "0metal\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 93
 testRunner.Then("the news archive endpoint response is correct", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Validate TVEyes Content in Search All News")]
        [NUnit.Framework.IgnoreAttribute("Ignored scenario")]
        [NUnit.Framework.CategoryAttribute("herdOfGnus")]
        [NUnit.Framework.CategoryAttribute("news")]
        public virtual void ValidateTVEyesContentInSearchAllNews()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Validate TVEyes Content in Search All News", new string[] {
                        "herdOfGnus",
                        "ignore"});
#line 96
this.ScenarioSetup(scenarioInfo);
#line 97
 testRunner.Given("I login as \'news archive manager\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 98
 testRunner.When("I search for news archive by keywords with a value of \'weather\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 99
 testRunner.Then("the News Archive Endpoint has the correct response", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 100
 testRunner.And("all the news clips are from TVEyes", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion

