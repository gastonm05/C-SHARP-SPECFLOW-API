// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.3.2.0
//      SpecFlow Generator Version:2.3.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace CCC_API.Features.Analytics
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.3.2.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("AnalyticsSorting")]
    [NUnit.Framework.IgnoreAttribute("Ignored feature")]
    [NUnit.Framework.CategoryAttribute("HeartsAndCharts")]
    public partial class AnalyticsSortingFeature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "AnalyticsSorting.feature"
#line hidden
        
        [NUnit.Framework.OneTimeSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "AnalyticsSorting", "\tIn order to group items\r\n\tAs a CCC user\r\n\tI want to be able to sort", ProgrammingLanguage.CSharp, new string[] {
                        "HeartsAndCharts",
                        "ignore"});
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.OneTimeTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.CategoryAttribute("analytics")]
        [NUnit.Framework.DescriptionAttribute("Sort Analytics News items")]
        [NUnit.Framework.TestCaseAttribute("OutletName", "Ascending", null)]
        [NUnit.Framework.TestCaseAttribute("OutletName", "Descending", null)]
        [NUnit.Framework.TestCaseAttribute("OutletType", "Ascending", null)]
        [NUnit.Framework.TestCaseAttribute("OutletType", "Descending", null)]
        [NUnit.Framework.TestCaseAttribute("PublicityValue", "Ascending", null)]
        [NUnit.Framework.TestCaseAttribute("PublicityValue", "Descending", null)]
        [NUnit.Framework.TestCaseAttribute("CirculationAudience", "Ascending", null)]
        [NUnit.Framework.TestCaseAttribute("CirculationAudience", "Descending", null)]
        [NUnit.Framework.TestCaseAttribute("UniqueVisitors", "Ascending", null)]
        [NUnit.Framework.TestCaseAttribute("UniqueVisitors", "Descending", null)]
        [NUnit.Framework.TestCaseAttribute("NewsDate", "Ascending", null)]
        [NUnit.Framework.TestCaseAttribute("NewsDate", "Descending", null)]
        public virtual void SortAnalyticsNewsItems(string field, string direction, string[] exampleTags)
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Sort Analytics News items", exampleTags);
#line 7
this.ScenarioSetup(scenarioInfo);
#line 8
 testRunner.Given("shared session for \'standard\' user with edition \'basic\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 9
 testRunner.When("I get a list of Analytics News items", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 10
 testRunner.And(string.Format("I sort Analytics News items \'{0}\' by \'{1}\'", direction, field), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 11
 testRunner.Then(string.Format("all Analytics News item \'{0}\' are sorted \'{1}\'", field, direction), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.CategoryAttribute("analytics")]
        [NUnit.Framework.DescriptionAttribute("Analytics default sort Descending news date when no sort field provided")]
        [NUnit.Framework.TestCaseAttribute("Ascending", "NewsDate", "Descending", null)]
        [NUnit.Framework.TestCaseAttribute("Descending", "NewsDate", "Descending", null)]
        public virtual void AnalyticsDefaultSortDescendingNewsDateWhenNoSortFieldProvided(string direction, string field, string sortDirection, string[] exampleTags)
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Analytics default sort Descending news date when no sort field provided", exampleTags);
#line 27
this.ScenarioSetup(scenarioInfo);
#line 28
 testRunner.Given("shared session for \'standard\' user with edition \'basic\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 29
 testRunner.When("I get a list of Analytics News items", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 30
 testRunner.And(string.Format("I sort Analytics News Items \'{0}\' without sort field", direction), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 31
 testRunner.Then(string.Format("all Analytics News item \'{0}\' are sorted \'{1}\'", field, sortDirection), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.CategoryAttribute("analytics")]
        [NUnit.Framework.DescriptionAttribute("Analytics default sort when no sort direction provided")]
        [NUnit.Framework.TestCaseAttribute("NewsDate", "Ascending", null)]
        [NUnit.Framework.TestCaseAttribute("OutletType", "Ascending", null)]
        [NUnit.Framework.TestCaseAttribute("OutletName", "Ascending", null)]
        public virtual void AnalyticsDefaultSortWhenNoSortDirectionProvided(string field, string sortDirection, string[] exampleTags)
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Analytics default sort when no sort direction provided", exampleTags);
#line 37
this.ScenarioSetup(scenarioInfo);
#line 38
testRunner.Given("shared session for \'standard\' user with edition \'basic\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 39
 testRunner.When("I get a list of Analytics News items", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 40
 testRunner.And(string.Format("I sort Analytics News Items by \'{0}\' without sort direction", field), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 41
 testRunner.Then(string.Format("all Analytics News item \'{0}\' are sorted \'{1}\'", field, sortDirection), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.CategoryAttribute("analytics")]
        [NUnit.Framework.DescriptionAttribute("Sort Analytics News items by invalid field")]
        [NUnit.Framework.TestCaseAttribute("invalid", "Ascending", "404", null)]
        [NUnit.Framework.TestCaseAttribute("invalid", "Descending", "404", null)]
        [NUnit.Framework.TestCaseAttribute("OutletId", "Ascending", "404", null)]
        [NUnit.Framework.TestCaseAttribute("OutletId", "descending", "404", null)]
        public virtual void SortAnalyticsNewsItemsByInvalidField(string field, string direction, string status, string[] exampleTags)
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Sort Analytics News items by invalid field", exampleTags);
#line 48
this.ScenarioSetup(scenarioInfo);
#line 49
 testRunner.Given("shared session for \'standard\' user with edition \'basic\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 50
 testRunner.When("I get a list of Analytics News items", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 51
 testRunner.And(string.Format("I sort Analytics News items by \'{0}\' with invalid field \'{1}\'", direction, field), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 52
 testRunner.Then(string.Format("the Analytics News items endpoint response is \'{0}\'", status), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.CategoryAttribute("analytics")]
        [NUnit.Framework.DescriptionAttribute("Sort Analytics News items by invalid direction")]
        [NUnit.Framework.TestCaseAttribute("invalid", "NewsDate", "400", null)]
        [NUnit.Framework.TestCaseAttribute("", "NewsDate", "400", null)]
        public virtual void SortAnalyticsNewsItemsByInvalidDirection(string direction, string field, string status, string[] exampleTags)
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Sort Analytics News items by invalid direction", exampleTags);
#line 60
this.ScenarioSetup(scenarioInfo);
#line 61
 testRunner.Given("shared session for \'standard\' user with edition \'basic\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 62
 testRunner.When("I get a list of Analytics News items", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 63
 testRunner.And(string.Format("I sort Analytics News items by \'{0}\' with invalid direction \'{1}\'", field, direction), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 64
 testRunner.Then(string.Format("the Analytics News items endpoint response is \'{0}\'", status), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion

