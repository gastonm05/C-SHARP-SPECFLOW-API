// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.3.2.0
//      SpecFlow Generator Version:2.3.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace CCC_API.Features.Settings.AutomatedNewsOutput
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.3.2.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("Settings - Automated News Output Config Endpoint")]
    public partial class Settings_AutomatedNewsOutputConfigEndpointFeature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "AutomatedNewsOutput.feature"
#line hidden
        
        [NUnit.Framework.OneTimeSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "Settings - Automated News Output Config Endpoint", "\tTo verify that Automated News Output Settings can be retrieved and modified\r\n\tAs" +
                    " a valid CCC user from a company with parameter Elysium-CustomFields-Enabled set" +
                    " to true\r\n\tI want to call newsftpexport endpoint - management/newsftpexport", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.OneTimeTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("A manager user with a News-FtpExport-Enabled disabled company should NOT be allow" +
            "ed to view or change Automated News Output Settings (only IncludeDuplicates is E" +
            "ditable).")]
        [NUnit.Framework.IgnoreAttribute("Ignored scenario")]
        [NUnit.Framework.CategoryAttribute("acl")]
        [NUnit.Framework.CategoryAttribute("Settings")]
        [NUnit.Framework.CategoryAttribute("FTP")]
        [NUnit.Framework.CategoryAttribute("Export")]
        public virtual void AManagerUserWithANews_FtpExport_EnabledDisabledCompanyShouldNOTBeAllowedToViewOrChangeAutomatedNewsOutputSettingsOnlyIncludeDuplicatesIsEditable_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("A manager user with a News-FtpExport-Enabled disabled company should NOT be allow" +
                    "ed to view or change Automated News Output Settings (only IncludeDuplicates is E" +
                    "ditable).", new string[] {
                        "acl",
                        "Settings",
                        "FTP",
                        "Export",
                        "Ignore"});
#line 7
this.ScenarioSetup(scenarioInfo);
#line 8
 testRunner.Given("I login as \'Smart Tag ON Company\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 9
 testRunner.When("I perform a GET on newsftpexport endpoint to view Automated News Output Settings", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 10
 testRunner.Then("NewsFtpExport endpoint GET response code should be 403", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 11
 testRunner.When("I perform a PUT on newsftpexport endpoint to edit Automated News Output Settings " +
                    "setting IncludeDuplicates to \'true\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 12
 testRunner.Then("NewsFtpExport endpoint PUT response code should be 403", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("A manager user with a News-FtpExport-Enabled enabled company should be allowed to" +
            " view or change Automated News Output Settings (only IncludeDuplicates is Editab" +
            "le).")]
        [NUnit.Framework.IgnoreAttribute("Ignored scenario")]
        [NUnit.Framework.CategoryAttribute("acl")]
        [NUnit.Framework.CategoryAttribute("Settings")]
        [NUnit.Framework.CategoryAttribute("FTP")]
        [NUnit.Framework.CategoryAttribute("Export")]
        public virtual void AManagerUserWithANews_FtpExport_EnabledEnabledCompanyShouldBeAllowedToViewOrChangeAutomatedNewsOutputSettingsOnlyIncludeDuplicatesIsEditable_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("A manager user with a News-FtpExport-Enabled enabled company should be allowed to" +
                    " view or change Automated News Output Settings (only IncludeDuplicates is Editab" +
                    "le).", new string[] {
                        "acl",
                        "Settings",
                        "FTP",
                        "Export",
                        "Ignore"});
#line 15
this.ScenarioSetup(scenarioInfo);
#line 16
 testRunner.Given("I login as \'FTP Export Enabled Company - Manager\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 17
 testRunner.When("I perform a GET on newsftpexport endpoint to view Automated News Output Settings", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 18
 testRunner.Then("NewsFtpExport endpoint GET response code should be 200", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 19
 testRunner.When("I perform a PUT on newsftpexport endpoint to edit Automated News Output Settings " +
                    "setting IncludeDuplicates to \'true\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 20
 testRunner.Then("NewsFtpExport endpoint PUT response code should be 200", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("A SysAdmin user with a News-FtpExport-Enabled enabled company should be allowed t" +
            "o view or change Automated News Output Settings (only IncludeDuplicates is Edita" +
            "ble).")]
        [NUnit.Framework.IgnoreAttribute("Ignored scenario")]
        [NUnit.Framework.CategoryAttribute("acl")]
        [NUnit.Framework.CategoryAttribute("Settings")]
        [NUnit.Framework.CategoryAttribute("FTP")]
        [NUnit.Framework.CategoryAttribute("Export")]
        public virtual void ASysAdminUserWithANews_FtpExport_EnabledEnabledCompanyShouldBeAllowedToViewOrChangeAutomatedNewsOutputSettingsOnlyIncludeDuplicatesIsEditable_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("A SysAdmin user with a News-FtpExport-Enabled enabled company should be allowed t" +
                    "o view or change Automated News Output Settings (only IncludeDuplicates is Edita" +
                    "ble).", new string[] {
                        "acl",
                        "Settings",
                        "FTP",
                        "Export",
                        "Ignore"});
#line 23
this.ScenarioSetup(scenarioInfo);
#line 24
 testRunner.Given("I login as \'FTP Export Enabled Company - SysAdmin User\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 25
 testRunner.When("I perform a GET on newsftpexport endpoint to view Automated News Output Settings", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 26
 testRunner.Then("NewsFtpExport endpoint GET response code should be 200", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 27
 testRunner.When("I perform a PUT on newsftpexport endpoint to edit Automated News Output Settings " +
                    "setting IncludeDuplicates to \'true\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 28
 testRunner.Then("NewsFtpExport endpoint PUT response code should be 200", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("A AE user with a News-FtpExport-Enabled enabled company should be allowed to view" +
            " or change Automated News Output Settings (only IncludeDuplicates is Editable).")]
        [NUnit.Framework.IgnoreAttribute("Ignored scenario")]
        [NUnit.Framework.CategoryAttribute("acl")]
        [NUnit.Framework.CategoryAttribute("Settings")]
        [NUnit.Framework.CategoryAttribute("FTP")]
        [NUnit.Framework.CategoryAttribute("Export")]
        public virtual void AAEUserWithANews_FtpExport_EnabledEnabledCompanyShouldBeAllowedToViewOrChangeAutomatedNewsOutputSettingsOnlyIncludeDuplicatesIsEditable_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("A AE user with a News-FtpExport-Enabled enabled company should be allowed to view" +
                    " or change Automated News Output Settings (only IncludeDuplicates is Editable).", new string[] {
                        "acl",
                        "Settings",
                        "FTP",
                        "Export",
                        "Ignore"});
#line 31
this.ScenarioSetup(scenarioInfo);
#line 32
 testRunner.Given("I login as \'FTP Export Enabled Company - AE\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 33
 testRunner.When("I perform a GET on newsftpexport endpoint to view Automated News Output Settings", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 34
 testRunner.Then("NewsFtpExport endpoint GET response code should be 200", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 35
 testRunner.When("I perform a PUT on newsftpexport endpoint to edit Automated News Output Settings " +
                    "setting IncludeDuplicates to \'true\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 36
 testRunner.Then("NewsFtpExport endpoint PUT response code should be 200", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("A Read Only user with a News-FtpExport-Enabled enabled company should NOT be allo" +
            "wed to view or change Automated News Output Settings (only IncludeDuplicates is " +
            "Editable).")]
        [NUnit.Framework.IgnoreAttribute("Ignored scenario")]
        [NUnit.Framework.CategoryAttribute("acl")]
        [NUnit.Framework.CategoryAttribute("Settings")]
        [NUnit.Framework.CategoryAttribute("FTP")]
        [NUnit.Framework.CategoryAttribute("Export")]
        public virtual void AReadOnlyUserWithANews_FtpExport_EnabledEnabledCompanyShouldNOTBeAllowedToViewOrChangeAutomatedNewsOutputSettingsOnlyIncludeDuplicatesIsEditable_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("A Read Only user with a News-FtpExport-Enabled enabled company should NOT be allo" +
                    "wed to view or change Automated News Output Settings (only IncludeDuplicates is " +
                    "Editable).", new string[] {
                        "acl",
                        "Settings",
                        "FTP",
                        "Export",
                        "Ignore"});
#line 39
this.ScenarioSetup(scenarioInfo);
#line 40
 testRunner.Given("I login as \'FTP Export Enabled Company - Readonly User\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 41
 testRunner.When("I perform a GET on newsftpexport endpoint to view Automated News Output Settings", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 42
 testRunner.Then("NewsFtpExport endpoint GET response code should be 403", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 43
 testRunner.When("I perform a PUT on newsftpexport endpoint to edit Automated News Output Settings " +
                    "setting IncludeDuplicates to \'true\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 44
 testRunner.Then("NewsFtpExport endpoint PUT response code should be 403", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("A Standard user with a News-FtpExport-Enabled enabled company should NOT be allow" +
            "ed to view or change Automated News Output Settings (only IncludeDuplicates is E" +
            "ditable).")]
        [NUnit.Framework.IgnoreAttribute("Ignored scenario")]
        [NUnit.Framework.CategoryAttribute("acl")]
        [NUnit.Framework.CategoryAttribute("Settings")]
        [NUnit.Framework.CategoryAttribute("FTP")]
        [NUnit.Framework.CategoryAttribute("Export")]
        public virtual void AStandardUserWithANews_FtpExport_EnabledEnabledCompanyShouldNOTBeAllowedToViewOrChangeAutomatedNewsOutputSettingsOnlyIncludeDuplicatesIsEditable_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("A Standard user with a News-FtpExport-Enabled enabled company should NOT be allow" +
                    "ed to view or change Automated News Output Settings (only IncludeDuplicates is E" +
                    "ditable).", new string[] {
                        "acl",
                        "Settings",
                        "FTP",
                        "Export",
                        "Ignore"});
#line 47
this.ScenarioSetup(scenarioInfo);
#line 48
 testRunner.Given("I login as \'FTP Export Enabled Company - Standard User\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 49
 testRunner.When("I perform a GET on newsftpexport endpoint to view Automated News Output Settings", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 50
 testRunner.Then("NewsFtpExport endpoint GET response code should be 403", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 51
 testRunner.When("I perform a PUT on newsftpexport endpoint to edit Automated News Output Settings " +
                    "setting IncludeDuplicates to \'true\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 52
 testRunner.Then("NewsFtpExport endpoint PUT response code should be 403", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion

