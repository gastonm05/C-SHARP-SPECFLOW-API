// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.3.2.0
//      SpecFlow Generator Version:2.3.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace CCC_API.Features.Settings.CustomFields
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.3.2.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("Settings - CustomFields Endpoint")]
    public partial class Settings_CustomFieldsEndpointFeature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "CustomFields.feature"
#line hidden
        
        [NUnit.Framework.OneTimeSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "Settings - CustomFields Endpoint", "\tTo verify that CustomFields can be created, retrieved, modified and deleted\r\n\tAs" +
                    " a valid CCC user from a company with parameter Elysium-CustomFields-Enabled set" +
                    " to true\r\n\tI want to call the Customfields endpoint - api/v1/customfields", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.OneTimeTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("An Admin User can create a new News CustomFields")]
        [NUnit.Framework.CategoryAttribute("acl")]
        [NUnit.Framework.CategoryAttribute("Settings")]
        [NUnit.Framework.CategoryAttribute("CustomFields")]
        public virtual void AnAdminUserCanCreateANewNewsCustomFields()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("An Admin User can create a new News CustomFields", new string[] {
                        "acl",
                        "Settings",
                        "CustomFields"});
#line 7
this.ScenarioSetup(scenarioInfo);
#line 8
 testRunner.Given("I login as \'Custom Fields - Manager User\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 9
 testRunner.When("I perform a POST on customfields endpoint to create a \'String\' \'News\' customfield" +
                    "", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 10
 testRunner.Then("CustomField endpoint \'POST\' response code should be 201", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 11
 testRunner.Then("Delete just created CustomFields and response code should be 200", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("An Admin User with already created News customFields can view them")]
        [NUnit.Framework.IgnoreAttribute("Ignored scenario")]
        [NUnit.Framework.CategoryAttribute("acl")]
        [NUnit.Framework.CategoryAttribute("Settings")]
        [NUnit.Framework.CategoryAttribute("CustomFields")]
        public virtual void AnAdminUserWithAlreadyCreatedNewsCustomFieldsCanViewThem()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("An Admin User with already created News customFields can view them", new string[] {
                        "acl",
                        "Settings",
                        "CustomFields",
                        "Ignore"});
#line 14
this.ScenarioSetup(scenarioInfo);
#line 15
 testRunner.Given("I login as \'Custom Fields - Manager User\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 16
 testRunner.When("I perform a GET on customfields \'news\' endpoint", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 17
 testRunner.Then("Get customfields endpoint response code should be 200", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("An Admin User can create/edit/delete Text News customFields")]
        [NUnit.Framework.IgnoreAttribute("Ignored scenario")]
        [NUnit.Framework.CategoryAttribute("acl")]
        [NUnit.Framework.CategoryAttribute("Settings")]
        [NUnit.Framework.CategoryAttribute("CustomFields")]
        public virtual void AnAdminUserCanCreateEditDeleteTextNewsCustomFields()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("An Admin User can create/edit/delete Text News customFields", new string[] {
                        "acl",
                        "Settings",
                        "CustomFields",
                        "Ignore"});
#line 20
this.ScenarioSetup(scenarioInfo);
#line 21
 testRunner.Given("I login as \'Custom Fields - Manager User\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 22
 testRunner.When("I perform a POST on customfields endpoint to create a \'String\' \'News\' customfield" +
                    "", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 23
 testRunner.Then("CustomField endpoint \'POST\' response code should be 201", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "id",
                        "name",
                        "type",
                        "defaultValue",
                        "entityType",
                        "maxlength"});
            table1.AddRow(new string[] {
                        "",
                        "ADUSERMEMO",
                        "String",
                        "tests",
                        "News",
                        "255"});
#line 24
 testRunner.When("I perform a PUT on CustomField endpoint to modify the one just created with this " +
                    "data :", ((string)(null)), table1, "When ");
#line 27
 testRunner.Then("CustomField endpoint \'PUT\' response code should be 201", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 28
 testRunner.Then("I verify all CustomField data was changed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 29
 testRunner.Then("Delete just created CustomFields and response code should be 200", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("An Admin User can create/edit/delete Memo News customFields")]
        [NUnit.Framework.IgnoreAttribute("Ignored scenario")]
        [NUnit.Framework.CategoryAttribute("acl")]
        [NUnit.Framework.CategoryAttribute("Settings")]
        [NUnit.Framework.CategoryAttribute("CustomFields")]
        public virtual void AnAdminUserCanCreateEditDeleteMemoNewsCustomFields()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("An Admin User can create/edit/delete Memo News customFields", new string[] {
                        "acl",
                        "Settings",
                        "CustomFields",
                        "Ignore"});
#line 32
this.ScenarioSetup(scenarioInfo);
#line 33
 testRunner.Given("I login as \'Custom Fields - Manager User\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 34
 testRunner.When("I perform a POST on customfields endpoint to create a \'Memo\' \'News\' customfield", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 35
 testRunner.Then("CustomField endpoint \'POST\' response code should be 201", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {
                        "id",
                        "name",
                        "type",
                        "defaultValue",
                        "entityType",
                        "maxlength"});
            table2.AddRow(new string[] {
                        "",
                        "ADUSERMEMO",
                        "Memo",
                        "tests",
                        "News",
                        ""});
#line 36
 testRunner.When("I perform a PUT on CustomField endpoint to modify the one just created with this " +
                    "data :", ((string)(null)), table2, "When ");
#line 39
 testRunner.Then("CustomField endpoint \'PUT\' response code should be 201", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 40
 testRunner.Then("I verify all CustomField data was changed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 41
 testRunner.Then("Delete just created CustomFields and response code should be 200", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("An Admin User can create/edit/delete  Number News customFields")]
        [NUnit.Framework.IgnoreAttribute("Ignored scenario")]
        [NUnit.Framework.CategoryAttribute("acl")]
        [NUnit.Framework.CategoryAttribute("Settings")]
        [NUnit.Framework.CategoryAttribute("CustomFields")]
        public virtual void AnAdminUserCanCreateEditDeleteNumberNewsCustomFields()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("An Admin User can create/edit/delete  Number News customFields", new string[] {
                        "acl",
                        "Settings",
                        "CustomFields",
                        "Ignore"});
#line 44
this.ScenarioSetup(scenarioInfo);
#line 45
 testRunner.Given("I login as \'Custom Fields - Manager User\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 46
 testRunner.When("I perform a POST on customfields endpoint to create a \'Number\' \'News\' customfield" +
                    "", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 47
 testRunner.Then("CustomField endpoint \'POST\' response code should be 201", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            TechTalk.SpecFlow.Table table3 = new TechTalk.SpecFlow.Table(new string[] {
                        "id",
                        "name",
                        "type",
                        "defaultValue",
                        "entityType",
                        "maxlength"});
            table3.AddRow(new string[] {
                        "",
                        "ADUSERNUMBER",
                        "Number",
                        "3000",
                        "News",
                        "255"});
#line 48
 testRunner.When("I perform a PUT on CustomField endpoint to modify the one just created with this " +
                    "data :", ((string)(null)), table3, "When ");
#line 51
 testRunner.Then("CustomField endpoint \'PUT\' response code should be 201", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 52
 testRunner.Then("I verify all CustomField data was changed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 53
 testRunner.Then("Delete just created CustomFields and response code should be 200", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("An Admin User can create/edit/delete  Date News customFields")]
        [NUnit.Framework.IgnoreAttribute("Ignored scenario")]
        [NUnit.Framework.CategoryAttribute("acl")]
        [NUnit.Framework.CategoryAttribute("Settings")]
        [NUnit.Framework.CategoryAttribute("CustomFields")]
        public virtual void AnAdminUserCanCreateEditDeleteDateNewsCustomFields()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("An Admin User can create/edit/delete  Date News customFields", new string[] {
                        "acl",
                        "Settings",
                        "CustomFields",
                        "Ignore"});
#line 56
this.ScenarioSetup(scenarioInfo);
#line 57
 testRunner.Given("I login as \'Custom Fields - Manager User\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 58
 testRunner.When("I perform a POST on customfields endpoint to create a \'Date\' \'News\' customfield", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 59
 testRunner.Then("CustomField endpoint \'POST\' response code should be 201", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            TechTalk.SpecFlow.Table table4 = new TechTalk.SpecFlow.Table(new string[] {
                        "id",
                        "name",
                        "type",
                        "defaultValue",
                        "entityType",
                        "maxlength"});
            table4.AddRow(new string[] {
                        "",
                        "ADUSERDate",
                        "Date",
                        "",
                        "News",
                        "255"});
#line 60
 testRunner.When("I perform a PUT on CustomField endpoint to modify the one just created with this " +
                    "data :", ((string)(null)), table4, "When ");
#line 63
 testRunner.Then("CustomField endpoint \'PUT\' response code should be 201", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 64
 testRunner.Then("I verify all CustomField data was changed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 65
 testRunner.Then("Delete just created CustomFields and response code should be 200", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("An Admin User can create/edit/delete Single-select News customFields")]
        [NUnit.Framework.IgnoreAttribute("Ignored scenario")]
        [NUnit.Framework.CategoryAttribute("acl")]
        [NUnit.Framework.CategoryAttribute("Settings")]
        [NUnit.Framework.CategoryAttribute("CustomFields")]
        public virtual void AnAdminUserCanCreateEditDeleteSingle_SelectNewsCustomFields()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("An Admin User can create/edit/delete Single-select News customFields", new string[] {
                        "acl",
                        "Settings",
                        "CustomFields",
                        "Ignore"});
#line 68
this.ScenarioSetup(scenarioInfo);
#line 69
 testRunner.Given("I login as \'Custom Fields - Manager User\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 70
 testRunner.When("I perform a POST on customfields endpoint to create a \'Single-Select\' \'News\' cust" +
                    "omfield", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 71
 testRunner.Then("CustomField endpoint \'POST\' response code should be 201", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            TechTalk.SpecFlow.Table table5 = new TechTalk.SpecFlow.Table(new string[] {
                        "id",
                        "name",
                        "type",
                        "defaultValue",
                        "entityType",
                        "maxlength"});
            table5.AddRow(new string[] {
                        "",
                        "NewSingleSelectName",
                        "Single-Select",
                        "",
                        "News",
                        "255"});
#line 72
 testRunner.When("I perform a PUT on CustomField endpoint to modify the one just created with this " +
                    "data :", ((string)(null)), table5, "When ");
#line 75
 testRunner.Then("CustomField endpoint \'PUT\' response code should be 201", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 76
 testRunner.Then("I verify all CustomField data was changed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 77
 testRunner.Then("Delete just created CustomFields and response code should be 200", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("An Admin User can create/edit/delete  Multi-select News custom Fields")]
        [NUnit.Framework.IgnoreAttribute("Ignored scenario")]
        [NUnit.Framework.CategoryAttribute("acl")]
        [NUnit.Framework.CategoryAttribute("Settings")]
        [NUnit.Framework.CategoryAttribute("CustomFields")]
        public virtual void AnAdminUserCanCreateEditDeleteMulti_SelectNewsCustomFields()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("An Admin User can create/edit/delete  Multi-select News custom Fields", new string[] {
                        "acl",
                        "Settings",
                        "CustomFields",
                        "Ignore"});
#line 80
this.ScenarioSetup(scenarioInfo);
#line 81
 testRunner.Given("I login as \'Custom Fields - Manager User\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 82
 testRunner.When("I perform a POST on customfields endpoint to create a \'Multi-Select\' \'News\' custo" +
                    "mfield", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 83
 testRunner.Then("CustomField endpoint \'POST\' response code should be 201", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            TechTalk.SpecFlow.Table table6 = new TechTalk.SpecFlow.Table(new string[] {
                        "id",
                        "name",
                        "type",
                        "defaultValue",
                        "entityType",
                        "maxlength"});
            table6.AddRow(new string[] {
                        "",
                        "NewSingleSelectName",
                        "Multi-Select",
                        "",
                        "News",
                        "255"});
#line 84
 testRunner.When("I perform a PUT on CustomField endpoint to modify the one just created with this " +
                    "data :", ((string)(null)), table6, "When ");
#line 87
 testRunner.Then("CustomField endpoint \'PUT\' response code should be 201", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 88
 testRunner.Then("I verify all CustomField data was changed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 89
 testRunner.Then("Delete just created CustomFields and response code should be 200", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("An Admin User can create bad put request the systems should responde with 400 cod" +
            "e")]
        [NUnit.Framework.IgnoreAttribute("Ignored scenario")]
        [NUnit.Framework.CategoryAttribute("acl")]
        [NUnit.Framework.CategoryAttribute("Settings")]
        [NUnit.Framework.CategoryAttribute("CustomFields")]
        public virtual void AnAdminUserCanCreateBadPutRequestTheSystemsShouldRespondeWith400Code()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("An Admin User can create bad put request the systems should responde with 400 cod" +
                    "e", new string[] {
                        "acl",
                        "Settings",
                        "CustomFields",
                        "Ignore"});
#line 92
this.ScenarioSetup(scenarioInfo);
#line 93
 testRunner.Given("I login as \'Custom Fields - Manager User\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 94
 testRunner.When("I perform a POST on customfields endpoint to create a \'String\' \'News\' customfield" +
                    "", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 95
 testRunner.Then("CustomField endpoint \'POST\' response code should be 201", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            TechTalk.SpecFlow.Table table7 = new TechTalk.SpecFlow.Table(new string[] {
                        "id",
                        "name",
                        "type",
                        "defaultValue",
                        "entityType",
                        "maxlength"});
            table7.AddRow(new string[] {
                        "",
                        "ADUSERNUMBER",
                        "Nothing",
                        "",
                        "News",
                        "255"});
#line 96
 testRunner.When("I perform a PUT on CustomField endpoint to modify the one just created with this " +
                    "data :", ((string)(null)), table7, "When ");
#line 99
 testRunner.Then("CustomField endpoint \'PUT\' response code should be 400", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 100
 testRunner.Then("Delete just created CustomFields and response code should be 200", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("An Standard User  can see already created news custom fields")]
        [NUnit.Framework.CategoryAttribute("acl")]
        [NUnit.Framework.CategoryAttribute("Settings")]
        [NUnit.Framework.CategoryAttribute("CustomFields")]
        public virtual void AnStandardUserCanSeeAlreadyCreatedNewsCustomFields()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("An Standard User  can see already created news custom fields", new string[] {
                        "acl",
                        "Settings",
                        "CustomFields"});
#line 104
this.ScenarioSetup(scenarioInfo);
#line 105
 testRunner.Given("I login as \'ACL Standard User\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 106
 testRunner.When("I perform a GET on customfields \'news\' endpoint", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 107
 testRunner.Then("Get customfields endpoint response code should be 200", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("An Standard User can NOT create text  News customFields")]
        [NUnit.Framework.IgnoreAttribute("Ignored scenario")]
        [NUnit.Framework.CategoryAttribute("acl")]
        [NUnit.Framework.CategoryAttribute("Settings")]
        [NUnit.Framework.CategoryAttribute("CustomFields")]
        public virtual void AnStandardUserCanNOTCreateTextNewsCustomFields()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("An Standard User can NOT create text  News customFields", new string[] {
                        "acl",
                        "Settings",
                        "CustomFields",
                        "Ignore"});
#line 110
this.ScenarioSetup(scenarioInfo);
#line 111
 testRunner.Given("I login as \'ACL Standard User\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 112
 testRunner.When("I perform a POST on customfields endpoint to create a \'String\' \'News\' customfield" +
                    "", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 113
 testRunner.Then("CustomField endpoint \'POST\' response code should be 403", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("An ReadOnly User  can see already created news custom fields")]
        [NUnit.Framework.IgnoreAttribute("Ignored scenario")]
        [NUnit.Framework.CategoryAttribute("acl")]
        [NUnit.Framework.CategoryAttribute("Settings")]
        [NUnit.Framework.CategoryAttribute("CustomFields")]
        public virtual void AnReadOnlyUserCanSeeAlreadyCreatedNewsCustomFields()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("An ReadOnly User  can see already created news custom fields", new string[] {
                        "acl",
                        "Settings",
                        "CustomFields",
                        "Ignore"});
#line 116
this.ScenarioSetup(scenarioInfo);
#line 117
 testRunner.Given("I login as \'ACL ReadOnly User\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 118
 testRunner.When("I perform a GET on customfields \'news\' endpoint", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 119
 testRunner.Then("Get customfields endpoint response code should be 200", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("An ReadOnly User can NOT create text  News customFields")]
        [NUnit.Framework.IgnoreAttribute("Ignored scenario")]
        [NUnit.Framework.CategoryAttribute("acl")]
        [NUnit.Framework.CategoryAttribute("Settings")]
        [NUnit.Framework.CategoryAttribute("CustomFields")]
        public virtual void AnReadOnlyUserCanNOTCreateTextNewsCustomFields()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("An ReadOnly User can NOT create text  News customFields", new string[] {
                        "acl",
                        "Settings",
                        "CustomFields",
                        "Ignore"});
#line 122
this.ScenarioSetup(scenarioInfo);
#line 123
 testRunner.Given("I login as \'ACL ReadOnly User\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 124
 testRunner.When("I perform a POST on customfields endpoint to create a \'String\' \'News\' customfield" +
                    "", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 125
 testRunner.Then("CustomField endpoint \'POST\' response code should be 403", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("An Admin User with already created Activities customFields can view them")]
        [NUnit.Framework.IgnoreAttribute("Ignored scenario")]
        [NUnit.Framework.CategoryAttribute("acl")]
        [NUnit.Framework.CategoryAttribute("Settings")]
        [NUnit.Framework.CategoryAttribute("CustomFields")]
        public virtual void AnAdminUserWithAlreadyCreatedActivitiesCustomFieldsCanViewThem()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("An Admin User with already created Activities customFields can view them", new string[] {
                        "acl",
                        "Settings",
                        "CustomFields",
                        "Ignore"});
#line 128
this.ScenarioSetup(scenarioInfo);
#line 129
 testRunner.Given("I login as \'ACL Manager User\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 130
 testRunner.When("I perform a GET on customfields \'activity\' endpoint", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 131
 testRunner.Then("Get customfields endpoint response code should be 200", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("An Admin User can create/edit/delete Text Activity customFields")]
        [NUnit.Framework.IgnoreAttribute("Ignored scenario")]
        [NUnit.Framework.CategoryAttribute("acl")]
        [NUnit.Framework.CategoryAttribute("Settings")]
        [NUnit.Framework.CategoryAttribute("CustomFields")]
        public virtual void AnAdminUserCanCreateEditDeleteTextActivityCustomFields()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("An Admin User can create/edit/delete Text Activity customFields", new string[] {
                        "acl",
                        "Settings",
                        "CustomFields",
                        "Ignore"});
#line 134
this.ScenarioSetup(scenarioInfo);
#line 135
 testRunner.Given("I login as \'Custom Fields - Manager User\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 136
 testRunner.When("I perform a POST on customfields endpoint to create a \'String\' \'Activity\' customf" +
                    "ield", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 137
 testRunner.Then("CustomField endpoint \'POST\' response code should be 201", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            TechTalk.SpecFlow.Table table8 = new TechTalk.SpecFlow.Table(new string[] {
                        "id",
                        "name",
                        "type",
                        "defaultValue",
                        "entityType",
                        "maxlength"});
            table8.AddRow(new string[] {
                        "",
                        "ADUSERMEMO",
                        "String",
                        "tests",
                        "Activity",
                        "255"});
#line 138
 testRunner.When("I perform a PUT on CustomField endpoint to modify the one just created with this " +
                    "data :", ((string)(null)), table8, "When ");
#line 141
 testRunner.Then("CustomField endpoint \'PUT\' response code should be 201", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 142
 testRunner.Then("I verify all CustomField data was changed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 143
 testRunner.Then("Delete just created CustomFields and response code should be 200", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("An Admin User can create/edit/delete Memo Activity customFields")]
        [NUnit.Framework.IgnoreAttribute("Ignored scenario")]
        [NUnit.Framework.CategoryAttribute("acl")]
        [NUnit.Framework.CategoryAttribute("Settings")]
        [NUnit.Framework.CategoryAttribute("CustomFields")]
        public virtual void AnAdminUserCanCreateEditDeleteMemoActivityCustomFields()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("An Admin User can create/edit/delete Memo Activity customFields", new string[] {
                        "acl",
                        "Settings",
                        "CustomFields",
                        "Ignore"});
#line 146
this.ScenarioSetup(scenarioInfo);
#line 147
 testRunner.Given("I login as \'Custom Fields - Manager User\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 148
 testRunner.When("I perform a POST on customfields endpoint to create a \'Memo\' \'Activity\' customfie" +
                    "ld", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 149
 testRunner.Then("CustomField endpoint \'POST\' response code should be 201", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            TechTalk.SpecFlow.Table table9 = new TechTalk.SpecFlow.Table(new string[] {
                        "id",
                        "name",
                        "type",
                        "defaultValue",
                        "entityType",
                        "maxlength"});
            table9.AddRow(new string[] {
                        "",
                        "ADUSERMEMO",
                        "Memo",
                        "tests",
                        "Activity",
                        ""});
#line 150
 testRunner.When("I perform a PUT on CustomField endpoint to modify the one just created with this " +
                    "data :", ((string)(null)), table9, "When ");
#line 153
 testRunner.Then("CustomField endpoint \'PUT\' response code should be 201", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 154
 testRunner.Then("I verify all CustomField data was changed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 155
 testRunner.Then("Delete just created CustomFields and response code should be 200", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("An Admin User can create/edit/delete  Number Activity customFields")]
        [NUnit.Framework.IgnoreAttribute("Ignored scenario")]
        [NUnit.Framework.CategoryAttribute("acl")]
        [NUnit.Framework.CategoryAttribute("Settings")]
        [NUnit.Framework.CategoryAttribute("CustomFields")]
        public virtual void AnAdminUserCanCreateEditDeleteNumberActivityCustomFields()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("An Admin User can create/edit/delete  Number Activity customFields", new string[] {
                        "acl",
                        "Settings",
                        "CustomFields",
                        "Ignore"});
#line 158
this.ScenarioSetup(scenarioInfo);
#line 159
 testRunner.Given("I login as \'Custom Fields - Manager User\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 160
 testRunner.When("I perform a POST on customfields endpoint to create a \'Number\' \'Activity\' customf" +
                    "ield", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 161
 testRunner.Then("CustomField endpoint \'POST\' response code should be 201", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            TechTalk.SpecFlow.Table table10 = new TechTalk.SpecFlow.Table(new string[] {
                        "id",
                        "name",
                        "type",
                        "defaultValue",
                        "entityType",
                        "maxlength"});
            table10.AddRow(new string[] {
                        "",
                        "ADUSERNUMBER",
                        "Number",
                        "3000",
                        "Activity",
                        "255"});
#line 162
 testRunner.When("I perform a PUT on CustomField endpoint to modify the one just created with this " +
                    "data :", ((string)(null)), table10, "When ");
#line 165
 testRunner.Then("CustomField endpoint \'PUT\' response code should be 201", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 166
 testRunner.Then("I verify all CustomField data was changed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 167
 testRunner.Then("Delete just created CustomFields and response code should be 200", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("An Admin User can create/edit/delete  Date Activity customFields")]
        [NUnit.Framework.IgnoreAttribute("Ignored scenario")]
        [NUnit.Framework.CategoryAttribute("acl")]
        [NUnit.Framework.CategoryAttribute("Settings")]
        [NUnit.Framework.CategoryAttribute("CustomFields")]
        public virtual void AnAdminUserCanCreateEditDeleteDateActivityCustomFields()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("An Admin User can create/edit/delete  Date Activity customFields", new string[] {
                        "acl",
                        "Settings",
                        "CustomFields",
                        "Ignore"});
#line 170
this.ScenarioSetup(scenarioInfo);
#line 171
 testRunner.Given("I login as \'Custom Fields - Manager User\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 172
 testRunner.When("I perform a POST on customfields endpoint to create a \'Date\' \'Activity\' customfie" +
                    "ld", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 173
 testRunner.Then("CustomField endpoint \'POST\' response code should be 201", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            TechTalk.SpecFlow.Table table11 = new TechTalk.SpecFlow.Table(new string[] {
                        "id",
                        "name",
                        "type",
                        "defaultValue",
                        "entityType",
                        "maxlength"});
            table11.AddRow(new string[] {
                        "",
                        "ADUSERDate",
                        "Date",
                        "",
                        "Activity",
                        "255"});
#line 174
 testRunner.When("I perform a PUT on CustomField endpoint to modify the one just created with this " +
                    "data :", ((string)(null)), table11, "When ");
#line 177
 testRunner.Then("CustomField endpoint \'PUT\' response code should be 201", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 178
 testRunner.Then("I verify all CustomField data was changed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 179
 testRunner.Then("Delete just created CustomFields and response code should be 200", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("An Admin User can create/edit/delete Single-select Activity customFields")]
        [NUnit.Framework.IgnoreAttribute("Ignored scenario")]
        [NUnit.Framework.CategoryAttribute("acl")]
        [NUnit.Framework.CategoryAttribute("Settings")]
        [NUnit.Framework.CategoryAttribute("CustomFields")]
        public virtual void AnAdminUserCanCreateEditDeleteSingle_SelectActivityCustomFields()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("An Admin User can create/edit/delete Single-select Activity customFields", new string[] {
                        "acl",
                        "Settings",
                        "CustomFields",
                        "Ignore"});
#line 182
this.ScenarioSetup(scenarioInfo);
#line 183
 testRunner.Given("I login as \'Custom Fields - Manager User\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 184
 testRunner.When("I perform a POST on customfields endpoint to create a \'Single-Select\' \'Activity\' " +
                    "customfield", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 185
 testRunner.Then("CustomField endpoint \'POST\' response code should be 201", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            TechTalk.SpecFlow.Table table12 = new TechTalk.SpecFlow.Table(new string[] {
                        "id",
                        "name",
                        "type",
                        "defaultValue",
                        "entityType",
                        "maxlength"});
            table12.AddRow(new string[] {
                        "",
                        "NewSingleSelectName",
                        "Single-Select",
                        "",
                        "Activity",
                        "255"});
#line 186
 testRunner.When("I perform a PUT on CustomField endpoint to modify the one just created with this " +
                    "data :", ((string)(null)), table12, "When ");
#line 189
 testRunner.Then("CustomField endpoint \'PUT\' response code should be 201", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 190
 testRunner.Then("I verify all CustomField data was changed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 191
 testRunner.Then("Delete just created CustomFields and response code should be 200", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("An Admin User can create/edit/delete  Multi-select Activity custom Fields")]
        [NUnit.Framework.IgnoreAttribute("Ignored scenario")]
        [NUnit.Framework.CategoryAttribute("acl")]
        [NUnit.Framework.CategoryAttribute("Settings")]
        [NUnit.Framework.CategoryAttribute("CustomFields")]
        public virtual void AnAdminUserCanCreateEditDeleteMulti_SelectActivityCustomFields()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("An Admin User can create/edit/delete  Multi-select Activity custom Fields", new string[] {
                        "acl",
                        "Settings",
                        "CustomFields",
                        "Ignore"});
#line 194
this.ScenarioSetup(scenarioInfo);
#line 195
 testRunner.Given("I login as \'Custom Fields - Manager User\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 196
 testRunner.When("I perform a POST on customfields endpoint to create a \'Multi-Select\' \'Activity\' c" +
                    "ustomfield", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 197
 testRunner.Then("CustomField endpoint \'POST\' response code should be 201", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            TechTalk.SpecFlow.Table table13 = new TechTalk.SpecFlow.Table(new string[] {
                        "id",
                        "name",
                        "type",
                        "defaultValue",
                        "entityType",
                        "maxlength"});
            table13.AddRow(new string[] {
                        "",
                        "NewSingleSelectName",
                        "Multi-Select",
                        "",
                        "Activity",
                        "255"});
#line 198
 testRunner.When("I perform a PUT on CustomField endpoint to modify the one just created with this " +
                    "data :", ((string)(null)), table13, "When ");
#line 201
 testRunner.Then("CustomField endpoint \'PUT\' response code should be 201", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 202
 testRunner.Then("I verify all CustomField data was changed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 203
 testRunner.Then("Delete just created CustomFields and response code should be 200", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion

