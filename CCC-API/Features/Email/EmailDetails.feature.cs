// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.3.2.0
//      SpecFlow Generator Version:2.3.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace CCC_API.Features.Email
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.3.2.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("EmailDetails")]
    public partial class EmailDetailsFeature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "EmailDetails.feature"
#line hidden
        
        [NUnit.Framework.OneTimeSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "EmailDetails", "\tIn order to see the status of my distribution\r\n\tI can use Email Sent Details pag" +
                    "e to view it", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.OneTimeTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void FeatureBackground()
        {
#line 5
#line 6
 testRunner.And("I remember expected data from \'Distributions.json\' file", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Filter recipients")]
        [NUnit.Framework.CategoryAttribute("publishers")]
        [NUnit.Framework.CategoryAttribute("email_sent_details")]
        [NUnit.Framework.TestCaseAttribute("contacts", "hasClickedLink", "0", null)]
        [NUnit.Framework.TestCaseAttribute("contacts", "hasOpened", "0", null)]
        [NUnit.Framework.TestCaseAttribute("contacts", "hasNotOpened", "0", null)]
        [NUnit.Framework.TestCaseAttribute("contacts", "hasNotClickedLink", "0", null)]
        [NUnit.Framework.TestCaseAttribute("contacts", "hasClickedLink", "1", null)]
        [NUnit.Framework.TestCaseAttribute("outlets", "hasClickedLink", "0", null)]
        [NUnit.Framework.TestCaseAttribute("outlets", "hasOpened", "0", null)]
        [NUnit.Framework.TestCaseAttribute("outlets", "hasNotOpened", "0", null)]
        [NUnit.Framework.TestCaseAttribute("outlets", "hasNotClickedLink", "1", null)]
        [NUnit.Framework.TestCaseAttribute("outlets", "hasNotClickedLink", "0", null)]
        [NUnit.Framework.TestCaseAttribute("individuals", "hasClickedLink", "0", null)]
        [NUnit.Framework.TestCaseAttribute("individuals", "hasOpened", "0", null)]
        [NUnit.Framework.TestCaseAttribute("individuals", "hasNotOpened", "0", null)]
        [NUnit.Framework.TestCaseAttribute("individuals", "hasNotOpened", "1", null)]
        [NUnit.Framework.TestCaseAttribute("organizations", "hasNotClickedLink", "0", null)]
        [NUnit.Framework.TestCaseAttribute("organizations", "hasClickedLink", "1", null)]
        [NUnit.Framework.TestCaseAttribute("organizations", "hasOpened", "0", null)]
        [NUnit.Framework.TestCaseAttribute("organizations", "hasNotOpened", "0", null)]
        [NUnit.Framework.TestCaseAttribute("organizations", "hasOpened", "1", null)]
        public virtual void FilterRecipients(string type, string option, string offset, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "publishers",
                    "email_sent_details"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Filter recipients", @__tags);
#line 9
this.ScenarioSetup(scenarioInfo);
#line 5
this.FeatureBackground();
#line 10
 testRunner.Given("shared session for \'standard\' user with edition \'Publishers manager user\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 11
 testRunner.When(string.Format("I perform a filter on {0} which {1} and {2}", type, option, offset), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 12
 testRunner.Then(string.Format("the email distribution details endpoint should return the list of {0} who {1} ski" +
                        "pping {2}", type, option, offset), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Email Sent Details Page > Analytics")]
        [NUnit.Framework.CategoryAttribute("publishers")]
        [NUnit.Framework.CategoryAttribute("email_sent_details")]
        public virtual void EmailSentDetailsPageAnalytics()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Email Sent Details Page > Analytics", new string[] {
                        "publishers",
                        "email_sent_details"});
#line 37
this.ScenarioSetup(scenarioInfo);
#line 5
this.FeatureBackground();
#line 38
 testRunner.Given("shared session for \'standard\' user with edition \'Publishers manager user\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 39
    testRunner.And("the API test data \'DistributionLinks.json\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 40
 testRunner.And("I remember distribution links", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 41
 testRunner.And("I create sent email distribution to \'contacts,outlets\' with links", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 42
 testRunner.And("request distribution recipients", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 43
 testRunner.When("I request sent email distribution details", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 44
 testRunner.Then("email sent details analytics request shows \'0\' opens, \'0\' clicks, \'0\' bounces", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 45
 testRunner.And("each link parsed correctly", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 46
 testRunner.When("open event present in the system for \'3\' recipients", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 47
 testRunner.And("I request sent email distribution details", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 48
 testRunner.Then("email sent details analytics request shows \'3\' opens, \'0\' clicks, \'0\' bounces", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 49
 testRunner.When("click event present in the system for \'2\' recipients to click \'4\' links", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 50
 testRunner.And("I request sent email distribution details", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 51
 testRunner.Then("email sent details analytics request shows \'3\' opens, \'2\' clicks, \'0\' bounces", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
